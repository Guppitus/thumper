<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.docbook.org/xml/4.5/docbookx.dtd">
  
<chapter id="Build">
  <title>Building and Testing Thumper</title>

  <para>This chapter describes how to build Thumper and its associated documentation. We also
    outline how to test Thumper. The tools with specific version numbers shown below are the
    official tools used by the Thumper contributors. Other tools (or other versions of the same
    tools) may also work. Obviously the greater the differences between the tools you attempt to
    use and those listed below the more trouble you are likely to encounter during the build
    process.</para>

  <para>Two versions of the Thumper exist. They are written in SPARK/Ada and Scala. Both a
    client and a server are provided in each language. At the time of this writing the SPARK/Ada
    version is the most mature.</para>

  <section>
    <title>SPARK Build</title>

    <para>In this section the tools needed to build and test the SPARK version of Thumper are
      described. If you are interested in only the Scala version of Thumper you can skip to the
      following section.</para>

    <variablelist>
      <title>Build Tools</title>

      <varlistentry>
        <term>GNAT</term>
        <listitem>
          <para>We use the GNAT GPL 2015 Ada compiler from AdaCore. It can be used freely for
            open source projects such as Thumper. Thumper makes use of some GNAT-specific
            libraries that are bundled with GNAT but that might not be available with another
            Ada compiler. These libraries are contained in package <package>GNAT</package> and
            its child packages.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SPARK</term>
        <listitem>
          <para>We use the SPARK GPL 2015 tools to verify Thumper.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>GPS</term>
        <listitem>
          <para>We use the GPS integrated development environment that comes with GNAT GPL 2015
            as our IDE. GPS is able to integrate both Ada development and SPARK analysis.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>AUnit</term>
        <listitem>
          <para>The Thumper test program makes use of the AUnit unit testing framework. AUnit is
            maintained by AdaCore and is part of the GNAT GPL 2015 distribution.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Python RFC-3161</term>
        <listitem>
          <para>
            <emphasis>Note that Python RFC-3161 assumes the communication with the server takes
              place over an HTTP connection. Thus it is not suitable for testing a UDP based
              server such as is found in the current implementation of Thumper. A future version
              of Thumper may support other transport modes, however. In that case this package
              may be more useful.</emphasis>
          </para>

          <para>To exercise the server without a specific client one could make use of the
            Python RFC-3161 implementation <ulink url="https://pypi.python.org/pypi/rfc3161"
              >here</ulink>. We recommend that this package be downloaded and unpacked into a
            folder such as <filename>rfc3161-x.y.z</filename> off the root of your working copy.
            Various scripts and paths assume this location for a suitable version x.y.z
            (currently 0.1.6 at the time of this writing). The Python RFC-3161 package requires
            the pyasn1 package as a prerequisite. Specific instructions for setting this up on
            Windows are as follows. Similar steps may be required on Linux and other systems but
            the details will need adjusting.</para>
          <itemizedlist>
            <listitem>
              <para>Download and install the latest Python 2.x version from the <ulink
                  url="http://www.python.org">Python home page</ulink>.</para>
            </listitem>
            <listitem>
              <para>Download and install the setuptools package from <ulink
                  url="https://pypi.python.org/pypi/setuptools">here</ulink>. For Windows this
                entails downloading the <filename>ez_setup.py</filename> script and executing
                it. Be sure to use an Administrator enabled command prompt to do this. When the
                script completes you should have the program
                  <filename>easy_install.exe</filename> in the <filename>Scripts</filename>
                folder of your Python installation.</para>
            </listitem>
            <listitem>
              <para>Using an Administrator enabled command prompt, go into your
                  <filename>Scripts</filename> folder and run <command>easy_install
                  pyasn1</command>. This installs the pyasn1 package into your Python
                installation. See the <ulink url="https://pypi.python.org/pypi/pyasn1/">pyasn1
                  page</ulink> for more information.</para>
            </listitem>
            <listitem>
              <para>Using a normal command prompt run the command <command>python</command> to
                start a Python interpreter (you may have to add your Python installation folder
                to the PATH first). Type <command>import pyasn1</command> to verify that the
                package is accessible.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>DocBook</term>
        <listitem>
          <para>The documentation is written in DocBook. It is an XML format and so is readable
            in an ordinary text editor. However, if you want to build nicely formatted
            documentation you will need a tool chain for processing DocBook documents. Several
            such tool chains exist. This document does not discuss the options any
            further.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>To build Thumper install the components listed above and also check out the supporting
      ASN.1 project from GitHub by cloning the URL <ulink
        url="https://github.com/pchapin/asn1.git"/>. You must clone the ASN.1 library into a
      sibling folder of the Thumper top level folder in order for the Thumper project file to
      work as provided.</para>

    <para>Load the project file <filename>Ada/thumper.gpr</filename> into GPS. You will find the
      main files <filename>thumper_server.adb</filename> and
        <filename>thumper_client.adb</filename>. Build these files to generate the server and
      client programs respectively. Note that at the time of this writing the client program is
      only a skeleton.</para>

    <para>To test Thumper, build the main file thumper_test.adb. Executing the resulting program
      will run all the unit tests and produce a report of the results on the console.</para>

  </section>

  <section>
    <title>Scala Build</title>

    <para>
      <emphasis>TODO: Finish me!</emphasis>
    </para>
  </section>

</chapter>
